'use strict'

// tests for getOneTimeEvent
// Generated by serverless-mocha-plugin

const mochaPlugin = require('serverless-mocha-plugin')
const expect = mochaPlugin.chai.expect
let wrappedGet = mochaPlugin.getWrapper('getOneTimeEvent', './../../oneTimeEvents/get.js', 'main')
let wrappedCreate = mochaPlugin.getWrapper('createOneTimeEvent', './../../oneTimeEvents/create.js', 'main')

describe('getOneTimeEvent', () => {
  it('Createe then get OneTimeEvent', () => {
    return wrappedCreate.run({
      requestContext: {
        authorizer: {
          claims: {
            sub: 'USER-SUB-1234'
          }
        }
      },
      body: "{\"EventStartDateTime\":\"2017-08-2 18:30\", \"Title\":\"Testing Event\", \"Description\":\"Testing Event!\", \"GeoPointHash\":\"11111111\"}"
    }).then((response) => {
      expect(response).to.not.be.empty
      expect(response.statusCode).to.equal(200)
      console.log('Response: ' + JSON.stringify(response, null, 4))


      //  return wrappedGet.run({
      //  pathParameters: {
      //    id: '11111111&dfc183b0-bf36-11e7-a162-cd5dd432a35b'
      //  }
      //}).then((response) => {
      //  expect(response).to.not.be.empty
      //  expect(response.statusCode).to.equal(200)
      //    // console.log('Response: ' + JSON.stringify(response, null, 4) );
      //})
    })
  })
})
